[
{
    "pk": 1, 
    "model": "graphpages.graphpage", 
    "fields": {
        "form_ref": null, 
        "description": "Top 20 countries by land area and population\r\n", 
        "form": "", 
        "title": "Top 20 countries by land area and population", 
        "form_page": "", 
        "created": "2014-03-22T16:41:04.533Z", 
        "graph_page": "    <h3>{{ title1 }}</h3>\r\n    {% pie_chart data1 with id='chart-1' %}\r\n    <h3>{{ title2 }}</h3>\r\n    {% pie_chart data2 with id='chart-2' %}\r\n", 
        "modified": "2014-03-23T23:01:02.686Z", 
        "graph_page_ref": null, 
        "form_page_ref": null, 
        "query": "from test_data.models import CIA\r\n\r\ntitle1 = 'Top 10 countries by land area'\r\nr = CIA.objects.order_by('-land_area')[:10]\r\ndata1 = [[o.name, o.land_area] for o in r]\r\n\r\ntitle2 = 'Top 10 countries by population'\r\nr = CIA.objects.order_by('-population')[:10]\r\ndata2 = [[o.name, o.population] for o in r]\r\n\r\n", 
        "query_ref": null, 
        "slug": ""
    }
},
{
    "pk": 2, 
    "model": "graphpages.graphpage", 
    "fields": {
        "form_ref": null, 
        "description": "Top 20 countries by land area and population\r\n", 
        "form": "", 
        "title": "Top 20 countries by land area and population 2", 
        "form_page": "", 
        "created": "2014-03-22T16:41:04.535Z", 
        "graph_page": "    <div class=\"container-fluid\">\r\n        <div class=\"jumbotron\">\r\n            <h3>Django Graph Pages</h3>\r\n            <p>This template displays two pie charts side by side in a fluid grid.</p>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <h3>{{ title1 }}</h3>\r\n                {% pie_chart data1 with id='chart-1' %}\r\n                <a class=\"btn btn-primary\" href=\"javascript:history.back()\">Back</a>\r\n\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <h3>{{ title2 }}</h3>\r\n                {% pie_chart data2 with id='chart-2' %}\r\n                <a class=\"btn btn-primary\" href=\"javascript:history.back()\">Back</a>\r\n            </div>\r\n        </div>\r\n", 
        "modified": "2014-03-23T23:01:55.739Z", 
        "graph_page_ref": null, 
        "form_page_ref": null, 
        "query": "from test_data.models import CIA\r\n\r\ntitle1 = 'Top 10 countries by land area'\r\nr = CIA.objects.order_by('-land_area')[:10]\r\ndata1 = [[o.name, o.land_area] for o in r]\r\n\r\ntitle2 = 'Top 10 countries by population'\r\nr = CIA.objects.order_by('-population')[:10]\r\ndata2 = [[o.name, o.population] for o in r]\r\n\r\n", 
        "query_ref": null, 
        "slug": ""
    }
},
{
    "pk": 3, 
    "model": "graphpages.graphpage", 
    "fields": {
        "form_ref": null, 
        "description": "Top N countries by land area and population with query form\r\n", 
        "form": "class GraphForm(forms.Form):\r\n    title = forms.CharField(min_length=3, max_length=80, label='Title')\r\n    number_countries = forms.IntegerField(max_value=50, min_value=5,\r\n                                          label='Number of countries')\r\n", 
        "title": "Top N countries by land area and population with query form", 
        "form_page": "        <div class=\"jumbotron\">\r\n<h1>Graph Form</h1>\r\n                <p>Forms may be customized by first displaying a form and allowing the user to enter values to customize the form.</p>\r\n                <p>These values may be used on the graph page or used in the graph query.</p>\r\n</>You can put explanation text above the form to explain the parameters.</p>\r\n            </div>\r\n        </div>\r\n\r\n<form method=\"post\" class=\"bootstrap3\" action=\"/graphpages/graphpage/{{graph_pk}}\"> {% csrf_token %}\r\n    {# Include the hidden fields #}\r\n    {% for hidden in graphform.hidden_fields %}\r\n    {{ hidden }}\r\n    {% endfor %}\r\n    {# Include the visible fields #}\r\n    {% for field in graphform.visible_fields %}\r\n{% if field.errors%}\r\n            <div class=\"row bg-danger\">\r\n  <div class=\"col-md-3 text-right\"></div>\r\n  <div class=\"col-md-7\">{{ field.errors }}</div>            \r\n            </div>\r\n{% endif %}\r\n<div class=\"row\">\r\n  <div class=\"col-md-3 text-right\">{{ field.label_tag }}</div>\r\n  <div class=\"col-md-7\">{{ field }}</div>\r\n</div>\r\n    {% endfor %}\r\n<div class=\"row\">\r\n<div class='col-md-3 text-right'>\r\n    <input type=\"submit\" value=\"Display graph\" class=\"btn btn-primary\" />\r\n</div>\r\n</div>\r\n</form>\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n               </br>\r\n               <p>Likewise you can put any instructions or whatever after the form.</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n", 
        "created": "2014-03-22T16:41:04.536Z", 
        "graph_page": "    <div class=\"container-fluid\">\r\n        <div class=\"jumbotron\">\r\n            <h2>The form title should be here \"{{title}}\"</h2>\r\n            <p>This template displays two pie charts side by side in a fluid grid.</p>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <h3>{{ title1 }}</h3>\r\n                {% pie_chart data1 with id='chart-1' %}\r\n                <a class=\"btn btn-primary\" href=\"javascript:history.back()\">Back</a>\r\n\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <h3>{{ title2 }}</h3>\r\n                {% pie_chart data2 with id='chart-2' %}\r\n                <a class=\"btn btn-primary\" href=\"javascript:history.back()\">Back</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n", 
        "modified": "2014-03-23T23:03:51.208Z", 
        "graph_page_ref": null, 
        "form_page_ref": null, 
        "query": "from test_data.models import CIA\r\n\r\ntitle1 = 'Top {} countries by land area'.format(number_countries)\r\nr = CIA.objects.order_by('-land_area')[:number_countries]\r\ndata1 = [[o.name, o.land_area] for o in r]\r\n\r\ntitle2 = 'Top {} countries by population'.format(number_countries)\r\nr = CIA.objects.order_by('-population')[:number_countries]\r\ndata2 = [[o.name, o.population] for o in r]\r\n", 
        "query_ref": null, 
        "slug": ""
    }
},
{
    "pk": 6, 
    "model": "graphpages.graphpage", 
    "fields": {
        "form_ref": null, 
        "description": "Top N countries by land area and population.  Bootstrap 3 query form. \r\n", 
        "form": "class GraphForm(forms.Form):\r\n    title = forms.CharField(min_length=3, max_length=80, label='Title')\r\n    number_countries = forms.IntegerField(max_value=50, min_value=5,\r\n                                          label='Number of countries')\r\n", 
        "title": "Django bootstrap3 form", 
        "form_page": "{% load bootstrap3 %}\r\n{% bootstrap_css %}\r\n{% bootstrap_messages %}\r\n\r\n<h1>Graph Form</h1>\r\n<p>Forms may be customized by first displaying a form and allowing the user to enter values to customize the form.</p>\r\n<p>These values may be used on the graph page or used in the graph query.</p>\r\n<p>You can put explanation text above the form to explain the parameters.</p>\r\n\r\n<form method=\"post\" class=\"bootstrap3\" action=\"/graphpages/graphpage/{{graph_pk}}\"> {% csrf_token %}\r\n{% bootstrap_form graphform %}\r\n    {% buttons %}\r\n        <button type=\"submit\" class=\"btn btn-primary\">\r\n            {% bootstrap_icon \"star\" %} Display Graph\r\n        </button>\r\n    {% endbuttons %}\r\n</form>\r\n\r\n</br>\r\n<p>Likewise you can put any instructions or whatever after the form.</p>\r\n", 
        "created": "2014-03-22T16:41:04.539Z", 
        "graph_page": "    <div class=\"container-fluid\">\r\n        <div class=\"jumbotron\">\r\n            <h2>The form title should be here \"{{title}}\"</h2>\r\n            <p>This template displays two pie charts side by side in a fluid grid.</p>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <h3>{{ title1 }}</h3>\r\n                {% pie_chart data1 with id='chart-1' %}\r\n                <a class=\"btn btn-primary\" href=\"javascript:history.back()\">Back</a>\r\n\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <h3>{{ title2 }}</h3>\r\n                {% pie_chart data2 with id='chart-2' %}\r\n                <a class=\"btn btn-primary\" href=\"javascript:history.back()\">Back</a>\r\n            </div>\r\n        </div>\r\n", 
        "modified": "2014-03-23T22:59:43.909Z", 
        "graph_page_ref": null, 
        "form_page_ref": null, 
        "query": "from test_data.models import CIA\r\n\r\ntitle1 = 'Top {} countries by land area'.format(number_countries)\r\nr = CIA.objects.order_by('-land_area')[:number_countries]\r\ndata1 = [[o.name, o.land_area] for o in r]\r\n\r\ntitle2 = 'Top {} countries by population'.format(number_countries)\r\nr = CIA.objects.order_by('-population')[:number_countries]\r\ndata2 = [[o.name, o.population] for o in r]\r\n\r\n", 
        "query_ref": null, 
        "slug": ""
    }
},
{
    "pk": 8, 
    "model": "graphpages.graphpage", 
    "fields": {
        "form_ref": null, 
        "description": "Top N countries by land area and population with query form and default form page\r\n", 
        "form": "class GraphForm(forms.Form):\r\n    title = forms.CharField(min_length=3, max_length=80, label='Title')\r\n    number_countries = forms.IntegerField(max_value=50, min_value=5,\r\n                                          label='Number of countries')\r\n\r\ntext_before_form = \"\"\"\r\nText before form\r\n============\r\n\r\nThis is some text before the form.\r\n\r\nIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\r\n\"\"\"\r\ntext_after_form = \"\"\"\r\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n\"\"\"", 
        "title": "Top N countries by land area and population with query form and default form page", 
        "form_page": "", 
        "created": "2014-03-22T16:41:04.536Z", 
        "graph_page": "    <div class=\"container-fluid\">\r\n        <div class=\"jumbotron\">\r\n            <h2>The form title should be here \"{{title}}\"</h2>\r\n            <p>This template displays two pie charts side by side in a fluid grid.</p>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"container-fluid\">\r\n        <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n                <h3>{{ title1 }}</h3>\r\n                {% pie_chart data1 with id='chart-1' %}\r\n                <a class=\"btn btn-primary\" href=\"javascript:history.back()\">Back</a>\r\n\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <h3>{{ title2 }}</h3>\r\n                {% pie_chart data2 with id='chart-2' %}\r\n                <a class=\"btn btn-primary\" href=\"javascript:history.back()\">Back</a>\r\n            </div>\r\n        </div>\r\n    </div>\r\n", 
        "modified": "2014-03-23T22:37:08.695Z", 
        "graph_page_ref": null, 
        "form_page_ref": null, 
        "query": "from test_data.models import CIA\r\n\r\ntitle1 = 'Top {} countries by land area'.format(number_countries)\r\n# r = CIA.objects.order_by('-land_area')[:number_countries]\r\n# data1 = [(o.name, o.land_area) for o in r]\r\n# data1 = CIA.objects.order_by('-land_area').values_list('name', 'land_area')[:{{number_countries}}]\r\ndata1 = map(list, CIA.objects.order_by('-land_area').values_list('name', 'land_area')[:number_countries])\r\n\r\ntitle2 = 'Top {} countries by population'.format(number_countries)\r\n# data2 = CIA.objects.order_by('-population').values_list('name', 'population')[:{{number_countries}}]\r\nr = CIA.objects.order_by('-population')[:number_countries]\r\ndata2 = [[o.name, o.population] for o in r]\r\n", 
        "query_ref": null, 
        "slug": "top-n-countries-by-land-area-and-population-with-2"
    }
},
{
    "pk": 9, 
    "model": "graphpages.graphpage", 
    "fields": {
        "form_ref": null, 
        "description": "This page contains defaults that can be used by other examples.", 
        "form": "class GraphForm(forms.Form):\r\n    title = forms.CharField(min_length=3, max_length=80, label='Title')\r\n    number_countries = forms.IntegerField(max_value=50, min_value=5,\r\n                                          label='Number of countries')\r\n\r\ntext_before_form = \"\"\"\r\nText before form\r\n============\r\n\r\nThis is some text before the form.\r\n\r\nIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\r\n\"\"\"\r\n\r\n\r\ntext_after_form = \"\"\"\r\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n\"\"\"", 
        "title": "Example defaults", 
        "form_page": "", 
        "created": "2014-03-25T12:45:46.185Z", 
        "graph_page": "", 
        "modified": "2014-04-05T15:25:24.848Z", 
        "graph_page_ref": null, 
        "form_page_ref": null, 
        "query": "from test_data.models import CIA\r\n\r\ntitle1 = 'Top {} countries by land area'.format(number_countries)\r\ndata1 = map(list, CIA.objects.order_by('-land_area').values_list('name', 'land_area')[:number_countries])\r\n\r\ntitle2 = 'Top {} countries by population'.format(number_countries)\r\ndata2 = map(list, CIA.objects.order_by('-population').values_list('name', 'population')[:number_countries])\r\n\r\ngraph1 = {'graph':\"{% pie_chart data1 %}\", 'width': 6}\r\ngraph2 = {'graph':\"{% pie_chart data2 %}\", 'width': 6}\r\ngraph3 = {'graph':\"{% column_chart data2 %}\", 'width': 3}\r\ngraph41 = {'graph':\"{% bar_chart data2 %}\", 'width': 4}\r\ngraph42 = {'graph':\"{% pie_chart data2 %}\", 'width': 4}\r\ngraph43 = {'graph':\"{% column_chart data2 %}\", 'width': 4}\r\n\r\nrow1 = (graph1,)\r\nrow2 = (graph2,)\r\nrow3 = (graph3, graph3,  graph3, graph3)\r\nrow4 = (graph1, graph2)\r\nrow5 = (graph41, graph42, graph43)\r\n\r\ngraph_rows = (row1, row2, row3, row4, row5)", 
        "query_ref": null, 
        "slug": "example-defaults"
    }
},
{
    "pk": 10, 
    "model": "graphpages.graphpage", 
    "fields": {
        "form_ref": 12, 
        "description": "Test ref links for form and query", 
        "form": "", 
        "title": "Test ref links", 
        "form_page": "", 
        "created": "2014-03-25T12:45:46.185Z", 
        "graph_page": "", 
        "modified": "2014-04-07T12:53:37.281Z", 
        "graph_page_ref": null, 
        "form_page_ref": null, 
        "query": "", 
        "query_ref": 12, 
        "slug": "example-defaults7b1bc55ab79311e380b3080027e16af0"
    }
},
{
    "pk": 11, 
    "model": "graphpages.graphpage", 
    "fields": {
        "form_ref": null, 
        "description": "This page contains defaults that can be used by other examples.", 
        "form": "class GraphForm(forms.Form):\r\n    title = forms.CharField(min_length=3, max_length=80, label='Title')\r\n    number_countries = forms.IntegerField(max_value=50, min_value=5,\r\n                                          label='Number of countries')\r\n\r\ntext_before_form = \"\"\"\r\nText before form\r\n============\r\n\r\nThis is some text before the form.\r\n\r\nIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\r\n\"\"\"\r\n\r\n\r\ntext_after_form = \"\"\"\r\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n\"\"\"", 
        "title": "Example class based graphpage", 
        "form_page": "", 
        "created": "2014-03-25T12:45:46.185Z", 
        "graph_page": "", 
        "modified": "2014-04-06T20:10:44.076Z", 
        "graph_page_ref": null, 
        "form_page_ref": null, 
        "query": "from test_data.models import CIA\r\n\r\ntitle1 = 'Top {} countries by land area'.format(number_countries)\r\ndata1 = map(list, CIA.objects.order_by('-land_area').values_list('name', 'land_area')[:number_countries])\r\n\r\ntitle2 = 'Top {} countries by population'.format(number_countries)\r\ntitlex=\"\"\"\r\nThis is a markdown title\r\n==================\r\n\"\"\" \r\ntitle2 = titlex + title2\r\ndata2 = map(list, CIA.objects.order_by('-population').values_list('name', 'population')[:number_countries])\r\n\r\ndata3 = map(list, CIA.objects.order_by('-population').values_list('name', 'population')[:number_countries])\r\n# data3 = {c[0]:c[1] for c in data3}\r\n# data3 = {'name':'xxxxx', 'data': data3 }\r\n\r\n\r\nexchange = {'2001-01-31': 1.064, '2002-01-31': 1.1305,\r\n                '2003-01-31': 0.9417, '2004-01-31': 0.7937,\r\n                '2005-01-31': 0.7609, '2006-01-31': 0.827,\r\n                '2007-01-31': 0.7692, '2008-01-31': 0.6801,\r\n                '2009-01-31': 0.7491, '2010-01-31': 0.7002,\r\n                '2011-01-31': 0.7489, '2012-01-31': 0.7755,\r\n                '2013-01-31': 0.7531,\r\n                }\r\n\r\ngraph1 = XGraph('pie', 'data1', width=6, text_before=title1, text_after='**Markdown bold after text**')\r\ngraph2 = XGraph('column', 'data1', width=6, text_before='Graph2 text before')\r\n#graph1 = XGraph('pie', 'data1', width=6)\r\n#graph2 = XGraph('column', 'data1', width=6)\r\n\r\nrow1 = XGraphRow([graph1, graph2])\r\nrow2 = XGraphRow([XGraph('bar', 'data2', text_before='Line chart defined within the graph row')])\r\nrow3 = XGraphRow([XGraph('line', 'exchange', width=4, text_after = 'This is line graph'),\r\n                                      XGraph('line', 'data3', width=4, text_after = 'This is line graph', \r\n                                                      options=\"height='500px' discrete=True \"),\r\n                                      XGraph('column', 'data3', width=4, text_after = 'Same data as column graph.', \r\n                                                      options=\"height='500px' \"),])\r\n\r\ngraphpage = XGraphPage([row1, row2, row3])", 
        "query_ref": null, 
        "slug": "example-defaults25e50582bd9811e39577080027e16af0"
    }
},
{
    "pk": 12, 
    "model": "graphpages.graphpage", 
    "fields": {
        "form_ref": null, 
        "description": "The graphpage contains test content for ref links", 
        "form": "class GraphForm(forms.Form):\r\n    title = forms.CharField(min_length=3, max_length=80, label='Title')\r\n    number_countries = forms.IntegerField(max_value=50, min_value=5,\r\n                                          label='Number of countries')\r\n\r\ntext_before_form = \"\"\"\r\nText before form\r\n============\r\n\r\nThis is some text before the form.\r\n\r\nIt is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\r\n\"\"\"\r\n\r\n\r\ntext_after_form = \"\"\"\r\nLorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\r\n\"\"\"", 
        "title": "__ source for ref link test", 
        "form_page": "", 
        "created": "2014-03-25T12:45:46.185Z", 
        "graph_page": "", 
        "modified": "2014-04-07T12:52:50.588Z", 
        "graph_page_ref": null, 
        "form_page_ref": null, 
        "query": "from test_data.models import CIA\r\n\r\ntitle1 = 'Top {} countries by land area'.format(number_countries)\r\ndata1 = map(list, CIA.objects.order_by('-land_area').values_list('name', 'land_area')[:number_countries])\r\n\r\ntitle2 = 'Top {} countries by population'.format(number_countries)\r\ndata2 = map(list, CIA.objects.order_by('-population').values_list('name', 'population')[:number_countries])\r\n\r\ngraph1 = {'graph':\"{% pie_chart data1 %}\", 'width': 6}\r\ngraph2 = {'graph':\"{% pie_chart data2 %}\", 'width': 6}\r\ngraph3 = {'graph':\"{% column_chart data2 %}\", 'width': 3}\r\ngraph41 = {'graph':\"{% bar_chart data2 %}\", 'width': 4}\r\ngraph42 = {'graph':\"{% pie_chart data2 %}\", 'width': 4}\r\ngraph43 = {'graph':\"{% column_chart data2 %}\", 'width': 4}\r\n\r\nrow1 = (graph1,)\r\nrow2 = (graph2,)\r\nrow3 = (graph3, graph3,  graph3, graph3)\r\nrow4 = (graph1, graph2)\r\nrow5 = (graph41, graph42, graph43)\r\n\r\ngraph_rows = (row1, row2, row3, row4, row5)", 
        "query_ref": null, 
        "slug": "example-defaults-duplicate-1abf6b98be5111e39f2c080"
    }
}
]
